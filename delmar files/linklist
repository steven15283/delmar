#include<stdio.h>
#include<stdlib.h>
/*structure node*/
struct Node  
{ 
  int data; 
  struct Node *next; 
}; 


/*the function that inserts a new node in the beginning*/
void front(struct Node** head, int a)
{
struct Node* newnode =(struct Node*) malloc(sizeof(struct Node)); 
newnode->data = a;
newnode->next = (*head);
(*head)= newnode;
}
/*this searches for a number that a node holds*/
void search(struct Node** head, int a)
{
struct Node *last = *head_ref;
	while(last->next != NULL)
	{
		if(last->data = a)
		{
			printf("the integer was found");
		}
	}

}
/*removes a node*/
void remove(struct Node** head, int a)
{
	struct Node* temp = *head_ref;

	if (position == 0) 
    	{ 
        *head_ref = temp->next; 
        free(temp);               
        return; 
    	} 
	for (int i=0; temp!=NULL && i<position-1; i++) 
     	{temp = temp->next; }

// If position is more than number of n does 
    	if (temp == NULL || temp->next == NULL) 
         	return; 
  
    // Node temp->next is the node to be deleted 
    // Store pointer to the next of node to be deleted 
    	struct Node *next = temp->next->next; 
  
    // Unlink the node from linked list 
    	free(temp->next);  // Free memory 
  
    	temp->next = next;  // Unlink the deleted node from list 
} 

int main()
{
/*declares the temporary nodes*/

struct Node* head = NULL;
struct Node* second = NULL;
struct Node* third = NULL;

/*allocates memory for the nodes*/

head = (struct Node*)malloc(sizeof(struct Node));
second = (struct Node*)malloc(sizeof(struct Node));
third = (struct Node*)malloc(sizeof(struct Node));

/*puts random information into the nodes*/
head->data = 1;
head->next = second;
second->data = 2;
second->next = third;
third->data = 3;
third->next = NULL;

/*this gets user information*/
int num1;
printf("enter the number you want to be in the new node in the beginning");
scanf("%d", num1);
front(&head, num1);

int num2;
printf("enter the number you want to search for");
scanf("%d", num2);
search(&head, num2);

int num3;
printf("enter the number you want to delete");
scanf("%d", num3);
delete(&head, num3);


return 0;
}



